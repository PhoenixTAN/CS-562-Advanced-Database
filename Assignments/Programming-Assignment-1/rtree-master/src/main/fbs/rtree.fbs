namespace com.github.davidmoten.rtree.fbs.generated;

table Tree_ {
  context: Context_;
  root: Node_;
  size: uint;
}

table Node_ {
  mbb: Bounds_;
  children: [Node_];
  entries: [Entry_];
}

struct BoxFloat_ {
  minX:float;
  minY:float;
  maxX:float;
  maxY:float;
}

struct PointFloat_ {
  x: float;
  y: float;
}

struct CircleFloat_ {
  x: float;
  y: float;
  radius: float;
}

struct LineFloat_ {
  minX:float;
  minY:float;
  maxX:float;
  maxY:float;
}

struct BoxDouble_ {
  minX:double;
  minY:double;
  maxX:double;
  maxY:double;
}

struct PointDouble_ {
  x: double;
  y: double;
}

struct CircleDouble_ {
  x: double;
  y: double;
  radius: double;
}

struct LineDouble_ {
  minX:double;
  minY:double;
  maxX:double;
  maxY:double;
}

table Entry_ {
  geometry:Geometry_;
  object:[byte];
}

enum GeometryType_ : byte {PointFloat, BoxFloat, CircleFloat, LineFloat, PointDouble, BoxDouble, CircleDouble, LineDouble}

table Geometry_ {
  type: GeometryType_;
  boxFloat: BoxFloat_;
  pointFloat: PointFloat_;
  circleFloat: CircleFloat_;
  lineFloat: BoxFloat_;
  boxDouble: BoxDouble_;
  pointDouble: PointDouble_;
  circleDouble: CircleDouble_;
  lineDouble: BoxDouble_;
}

enum BoundsType_ : byte {BoundsFloat, BoundsDouble}

table Bounds_ {
   type: BoundsType_;
   boxFloat: BoxFloat_;
   boxDouble: BoxDouble_;
}

table Context_ {
  bounds: Bounds_;
  minChildren: int;
  maxChildren: int;
}

root_type Tree_;

